# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import base_pb2 as base__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in base_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class CalculatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateState = channel.unary_unary(
                '/example.Calculator/UpdateState',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)


class CalculatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateState,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'example.Calculator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('example.Calculator', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Calculator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.Calculator/UpdateState',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetShipsState = channel.unary_stream(
                '/example.User/GetShipsState',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=base__pb2.ShipResponse.FromString,
                _registered_method=True)
        self.GetShipState = channel.unary_unary(
                '/example.User/GetShipState',
                request_serializer=base__pb2.ShipRequest.SerializeToString,
                response_deserializer=base__pb2.ShipResponse.FromString,
                _registered_method=True)
        self.SetShipState = channel.unary_unary(
                '/example.User/SetShipState',
                request_serializer=base__pb2.SetShipRequest.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)
        self.SetShipSimWay = channel.unary_unary(
                '/example.User/SetShipSimWay',
                request_serializer=base__pb2.SetShipSimRequest.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)
        self.SetShipsSimWay = channel.stream_unary(
                '/example.User/SetShipsSimWay',
                request_serializer=base__pb2.SetShipSimRequest.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)
        self.NewShip = channel.unary_unary(
                '/example.User/NewShip',
                request_serializer=base__pb2.NewShipRequest.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetShipsState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShipState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetShipState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetShipSimWay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetShipsSimWay(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewShip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetShipsState': grpc.unary_stream_rpc_method_handler(
                    servicer.GetShipsState,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=base__pb2.ShipResponse.SerializeToString,
            ),
            'GetShipState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShipState,
                    request_deserializer=base__pb2.ShipRequest.FromString,
                    response_serializer=base__pb2.ShipResponse.SerializeToString,
            ),
            'SetShipState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetShipState,
                    request_deserializer=base__pb2.SetShipRequest.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
            'SetShipSimWay': grpc.unary_unary_rpc_method_handler(
                    servicer.SetShipSimWay,
                    request_deserializer=base__pb2.SetShipSimRequest.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
            'SetShipsSimWay': grpc.stream_unary_rpc_method_handler(
                    servicer.SetShipsSimWay,
                    request_deserializer=base__pb2.SetShipSimRequest.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
            'NewShip': grpc.unary_unary_rpc_method_handler(
                    servicer.NewShip,
                    request_deserializer=base__pb2.NewShipRequest.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'example.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('example.User', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetShipsState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/example.User/GetShipsState',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            base__pb2.ShipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetShipState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.User/GetShipState',
            base__pb2.ShipRequest.SerializeToString,
            base__pb2.ShipResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetShipState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.User/SetShipState',
            base__pb2.SetShipRequest.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetShipSimWay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.User/SetShipSimWay',
            base__pb2.SetShipSimRequest.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetShipsSimWay(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/example.User/SetShipsSimWay',
            base__pb2.SetShipSimRequest.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NewShip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.User/NewShip',
            base__pb2.NewShipRequest.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class UtilsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetTimestamp = channel.unary_unary(
                '/example.Utils/SetTimestamp',
                request_serializer=base__pb2.SetTimestampRequest.SerializeToString,
                response_deserializer=base__pb2.Response.FromString,
                _registered_method=True)
        self.GetTimestamp = channel.unary_unary(
                '/example.Utils/GetTimestamp',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=base__pb2.GetTimestampResponse.FromString,
                _registered_method=True)
        self.GetIce = channel.unary_unary(
                '/example.Utils/GetIce',
                request_serializer=base__pb2.GetIceRequest.SerializeToString,
                response_deserializer=base__pb2.GetIceResponse.FromString,
                _registered_method=True)


class UtilsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetTimestamp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimestamp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UtilsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetTimestamp': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTimestamp,
                    request_deserializer=base__pb2.SetTimestampRequest.FromString,
                    response_serializer=base__pb2.Response.SerializeToString,
            ),
            'GetTimestamp': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimestamp,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=base__pb2.GetTimestampResponse.SerializeToString,
            ),
            'GetIce': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIce,
                    request_deserializer=base__pb2.GetIceRequest.FromString,
                    response_serializer=base__pb2.GetIceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'example.Utils', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('example.Utils', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Utils(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetTimestamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.Utils/SetTimestamp',
            base__pb2.SetTimestampRequest.SerializeToString,
            base__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTimestamp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.Utils/GetTimestamp',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            base__pb2.GetTimestampResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/example.Utils/GetIce',
            base__pb2.GetIceRequest.SerializeToString,
            base__pb2.GetIceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
